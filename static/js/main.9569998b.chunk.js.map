{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","movieTitle","url","fetch","then","res","ok","Error","status","statusText","json","FindMovie","addMovieToList","useState","searchTitle","setSearchTitle","setMovie","titleError","setTitleError","findMovie","a","trim","findedMovie","htmlFor","type","id","value","placeholder","classNames","onChange","e","target","onClick","App","setMovies","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9569998b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=b0356805&t=';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n};\n\nexport const getMovie = (movieTitle: string) => {\n  return request(`${movieTitle}`);\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\n\ninterface Props {\n  addMovieToList: AddMovieToList;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovieToList }) => {\n  const [searchTitle, setSearchTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [titleError, setTitleError] = useState<string>('');\n\n  const findMovie = async () => {\n    const findedMovie = await getMovie(searchTitle.trim());\n\n    if (findedMovie.Error) {\n      setTitleError(findedMovie.Error);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie(findedMovie);\n    setTitleError('');\n  };\n\n  const addFindedMovie = () => {\n    addMovieToList(movie);\n    setSearchTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={searchTitle}\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': titleError })}\n                onChange={(e) => {\n                  setSearchTitle(e.target.value);\n                  setTitleError('');\n                }}\n              />\n            </div>\n          </label>\n\n          {titleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addFindedMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieToList: AddMovieToList = (findedMovie) => {\n    if (findedMovie) {\n      if (!movies.some(movie => movie.imdbID === findedMovie.imdbID)) {\n        setMovies(prevMovies => [...prevMovies, findedMovie]);\n      }\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovieToList={addMovieToList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}